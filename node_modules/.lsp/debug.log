Hello - from /Users/razeenmaroof/.vscode/extensions/jaredly.reason-vscode-1.7.13/bin.native
Previous log location: /var/folders/m8/mfd3fpb16dq5kksg81mm6t_80000gn/T/lsp.log
Sending notification {"jsonrpc": "2.0", "method": "client/registerCapability", "params": {"registrations": [{"id": "watching", "method": "workspace/didChangeWatchedFiles", "registerOptions": {"watchers": [{"globPattern": "**/bsconfig.json"}, {"globPattern": "**/.merlin"}]}}]}}
Sending response {"id": 0, "jsonrpc": "2.0", "result": {"capabilities": {"textDocumentSync": 1, "hoverProvider": true, "completionProvider": {"resolveProvider": true, "triggerCharacters": ["."]}, "signatureHelpProvider": {"triggerCharacters": ["("]}, "definitionProvider": true, "typeDefinitionProvider": true, "referencesProvider": true, "documentSymbolProvider": true, "codeActionProvider": true, "executeCommandProvider": {"commands": ["reason-language-server.add_to_interface_inner"]}, "codeLensProvider": {"resolveProvider": true}, "documentHighlightProvider": true, "documentRangeFormattingProvider": true, "documentFormattingProvider": true, "renameProvider": true}}}
Read message 
{"jsonrpc":"2.0","method":"initialized","params":{}}
Read message 
{"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{"reason_language_server":{"location":"","build_system_override_by_root":{},"refmt":"","lispRefmt":"","mlfmt":"","format_width":80,"per_value_codelens":false,"dependencies_codelens":true,"opens_codelens":true,"show_module_path_on_hover":true,"reloadOnChange":false,"show_debug_errors":false,"autoRebuild":true}}}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/razeenmaroof/research/Finished/hazelnut/hazelnut.re","languageId":"reason","version":1,"text":"open Sexplib.Std;\n// open Monad_lib.Monad; // Uncomment this line to use the maybe monad\n\nlet compare_string = String.compare;\nlet compare_int = Int.compare;\n\nmodule Htyp = {\n  [@deriving (sexp, compare, show({with_path: false}))]\n  type t =\n    | Arrow(t, t)\n    | Num\n    | Hole;\n};\n\nmodule Hexp = {\n  [@deriving (sexp, compare, show({with_path: false}))]\n  type t =\n    | Var(string)\n    | Lam(string, t)\n    | Ap(t, t)\n    | Lit(int)\n    | Plus(t, t)\n    | Asc(t, Htyp.t)\n    | EHole\n    | NEHole(t);\n};\n\nmodule Ztyp = {\n  [@deriving (sexp, compare, show({with_path: false}))]\n  type t =\n    | Cursor(Htyp.t)\n    | LArrow(t, Htyp.t)\n    | RArrow(Htyp.t, t);\n};\n\nmodule Zexp = {\n  [@deriving (sexp, compare, show({with_path: false}))]\n  type t =\n    | Cursor(Hexp.t)\n    | Lam(string, t)\n    | LAp(t, Hexp.t)\n    | RAp(Hexp.t, t)\n    | LPlus(t, Hexp.t)\n    | RPlus(Hexp.t, t)\n    | LAsc(t, Htyp.t)\n    | RAsc(Hexp.t, Ztyp.t)\n    | NEHole(t);\n};\n\nmodule Child = {\n  [@deriving (sexp, compare)]\n  type t =\n    | One\n    | Two;\n};\n\nmodule Dir = {\n  [@deriving (sexp, compare)]\n  type t =\n    | Child(Child.t)\n    | Parent;\n};\n\nmodule Shape = {\n  [@deriving (sexp, compare)]\n  type t =\n    | Arrow\n    | Num\n    | Asc\n    | Var(string)\n    | Lam(string)\n    | Ap\n    | Lit(int)\n    | Plus\n    | NEHole;\n};\n\nmodule Action = {\n  [@deriving (sexp, compare)]\n  type t =\n    | Move(Dir.t)\n    | Construct(Shape.t)\n    | Del\n    | Finish;\n};\n\nmodule TypCtx = Map.Make(String);\ntype typctx = TypCtx.t(Htyp.t);\n\nexception Unimplemented;\n\nlet erase_exp = (e: Zexp.t): Hexp.t => {\n  // Used to suppress unused variable warnings\n  // Okay to remove\n  let _ = e;\n\n  raise(Unimplemented);\n};\n\nlet syn = (ctx: typctx, e: Hexp.t): option(Htyp.t) => {\n  // Used to suppress unused variable warnings\n  // Okay to remove\n  let _ = ctx;\n  let _ = e;\n\n  raise(Unimplemented);\n}\n\nand ana = (ctx: typctx, e: Hexp.t, t: Htyp.t): bool => {\n  // Used to suppress unused variable warnings\n  // Okay to remove\n  let _ = ctx;\n  let _ = e;\n  let _ = t;\n\n  raise(Unimplemented);\n};\n\nlet syn_action =\n    (ctx: typctx, (e: Zexp.t, t: Htyp.t), a: Action.t)\n    : option((Zexp.t, Htyp.t)) => {\n  // Used to suppress unused variable warnings\n  // Okay to remove\n  let _ = ctx;\n  let _ = e;\n  let _ = t;\n  let _ = a;\n\n  raise(Unimplemented);\n}\n\nand ana_action =\n    (ctx: typctx, e: Zexp.t, a: Action.t, t: Htyp.t): option(Zexp.t) => {\n  // Used to suppress unused variable warnings\n  // Okay to remove\n  let _ = ctx;\n  let _ = e;\n  let _ = a;\n  let _ = t;\n\n  raise(Unimplemented);\n};\n"}}}
Found a `dune` file at /Users/razeenmaroof/research/Finished/hazelnut
]] Making a new jbuilder package at /Users/razeenmaroof/research/Finished/hazelnut
=== Project root: /Users/razeenmaroof/research/Finished
Detected `opam` dependency manager for local use
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Unable to read /Users/razeenmaroof/research/Finished/hazelnut/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":1,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/razeenmaroof/research/Finished/hazelnut/hazelnut.re"},"range":{"start":{"line":96,"character":0},"end":{"line":97,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00405311584473ms
Found a `dune` file at /Users/razeenmaroof/research/Finished/hazelnut
]] Making a new jbuilder package at /Users/razeenmaroof/research/Finished/hazelnut
=== Project root: /Users/razeenmaroof/research/Finished
Detected `opam` dependency manager for local use
Sending response {"id": 1, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/razeenmaroof/research/Finished/hazelnut/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1}}
Read message 
{"jsonrpc":"2.0","id":2,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/razeenmaroof/research/Finished/hazelnut/hazelnut.re"},"range":{"start":{"line":96,"character":0},"end":{"line":97,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00405311584473ms
Found a `dune` file at /Users/razeenmaroof/research/Finished/hazelnut
]] Making a new jbuilder package at /Users/razeenmaroof/research/Finished/hazelnut
=== Project root: /Users/razeenmaroof/research/Finished
Detected `opam` dependency manager for local use
Sending response {"id": 2, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/razeenmaroof/research/Finished/hazelnut/.merlin"}}
Found a `dune` file at /Users/razeenmaroof/research/Finished/hazelnut
]] Making a new jbuilder package at /Users/razeenmaroof/research/Finished/hazelnut
=== Project root: /Users/razeenmaroof/research/Finished
Detected `opam` dependency manager for local use
Read message 
{"jsonrpc":"2.0","method":"$/setTraceNotification","params":{"value":"off"}}
Read message 
{"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{"reason_language_server":{"location":"","build_system_override_by_root":{},"refmt":"","lispRefmt":"","mlfmt":"","format_width":80,"per_value_codelens":false,"dependencies_codelens":true,"opens_codelens":true,"show_module_path_on_hover":true,"reloadOnChange":false,"show_debug_errors":false,"autoRebuild":true}}}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":2}}
Read message 
{"jsonrpc":"2.0","id":3,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/razeenmaroof/research/Finished/hazelnut/hazelnut.re"},"range":{"start":{"line":96,"character":0},"end":{"line":97,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00309944152832ms
Found a `dune` file at /Users/razeenmaroof/research/Finished/hazelnut
]] Making a new jbuilder package at /Users/razeenmaroof/research/Finished/hazelnut
=== Project root: /Users/razeenmaroof/research/Finished
Detected `opam` dependency manager for local use
Sending response {"id": 3, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/razeenmaroof/research/Finished/hazelnut/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":3}}
Read message 
{"jsonrpc":"2.0","id":4,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/razeenmaroof/research/Finished/hazelnut/hazelnut.re"},"range":{"start":{"line":96,"character":0},"end":{"line":97,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00309944152832ms
Found a `dune` file at /Users/razeenmaroof/research/Finished/hazelnut
]] Making a new jbuilder package at /Users/razeenmaroof/research/Finished/hazelnut
=== Project root: /Users/razeenmaroof/research/Finished
Detected `opam` dependency manager for local use
Sending response {"id": 4, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/razeenmaroof/research/Finished/hazelnut/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":4}}
Read message 
{"jsonrpc":"2.0","method":"$/setTraceNotification","params":{"value":"off"}}
Read message 
{"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{"reason_language_server":{"location":"","build_system_override_by_root":{},"refmt":"","lispRefmt":"","mlfmt":"","format_width":80,"per_value_codelens":false,"dependencies_codelens":true,"opens_codelens":true,"show_module_path_on_hover":true,"reloadOnChange":false,"show_debug_errors":false,"autoRebuild":true}}}}
Read message 
{"jsonrpc":"2.0","method":"$/setTraceNotification","params":{"value":"off"}}
Read message 
{"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{"reason_language_server":{"location":"","build_system_override_by_root":{},"refmt":"","lispRefmt":"","mlfmt":"","format_width":80,"per_value_codelens":false,"dependencies_codelens":true,"opens_codelens":true,"show_module_path_on_hover":true,"reloadOnChange":false,"show_debug_errors":false,"autoRebuild":true}}}}
Read message 
{"jsonrpc":"2.0","method":"$/setTraceNotification","params":{"value":"off"}}
Read message 
{"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{"reason_language_server":{"location":"","build_system_override_by_root":{},"refmt":"","lispRefmt":"","mlfmt":"","format_width":80,"per_value_codelens":false,"dependencies_codelens":true,"opens_codelens":true,"show_module_path_on_hover":true,"reloadOnChange":false,"show_debug_errors":false,"autoRebuild":true}}}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/razeenmaroof/research/Finished/hazelnut/hazelnut.re"}}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/razeenmaroof/research/Finished/hazelnut/hazelnut.rei","languageId":"reason","version":1,"text":"module Htyp: {\n  [@deriving (sexp, compare, show({with_path: false}))]\n  type t =\n    | Arrow(t, t)\n    | Num\n    | Hole;\n};\n\nmodule Hexp: {\n  [@deriving (sexp, compare, show({with_path: false}))]\n  type t =\n    | Var(string)\n    | Lam(string, t)\n    | Ap(t, t)\n    | Lit(int)\n    | Plus(t, t)\n    | Asc(t, Htyp.t)\n    | EHole\n    | NEHole(t);\n};\n\nmodule Ztyp: {\n  [@deriving (sexp, compare, show({with_path: false}))]\n  type t =\n    | Cursor(Htyp.t)\n    | LArrow(t, Htyp.t)\n    | RArrow(Htyp.t, t);\n};\n\nmodule Zexp: {\n  [@deriving (sexp, compare, show({with_path: false}))]\n  type t =\n    | Cursor(Hexp.t)\n    | Lam(string, t)\n    | LAp(t, Hexp.t)\n    | RAp(Hexp.t, t)\n    | LPlus(t, Hexp.t)\n    | RPlus(Hexp.t, t)\n    | LAsc(t, Htyp.t)\n    | RAsc(Hexp.t, Ztyp.t)\n    | NEHole(t);\n};\n\nmodule Child: {\n  type t =\n    | One\n    | Two;\n};\n\nmodule Dir: {\n  type t =\n    | Child(Child.t)\n    | Parent;\n};\n\nmodule Shape: {\n  type t =\n    | Arrow\n    | Num\n    | Asc\n    | Var(string)\n    | Lam(string)\n    | Ap\n    | Lit(int)\n    | Plus\n    | NEHole;\n};\n\nmodule Action: {\n  [@deriving (sexp, compare)]\n  type t =\n    | Move(Dir.t)\n    | Construct(Shape.t)\n    | Del\n    | Finish;\n};\n\nmodule TypCtx: {\n  type t('a) = Map.Make(String).t('a);\n  let empty: t('a);\n};\ntype typctx = TypCtx.t(Htyp.t);\n\nexception Unimplemented;\n\nlet erase_exp: Zexp.t => Hexp.t;\nlet syn: (typctx, Hexp.t) => option(Htyp.t);\nlet ana: (typctx, Hexp.t, Htyp.t) => bool;\nlet syn_action:\n  (typctx, (Zexp.t, Htyp.t), Action.t) => option((Zexp.t, Htyp.t));\nlet ana_action: (typctx, Zexp.t, Action.t, Htyp.t) => option(Zexp.t);\n"}}}
Found a `dune` file at /Users/razeenmaroof/research/Finished/hazelnut
]] Making a new jbuilder package at /Users/razeenmaroof/research/Finished/hazelnut
=== Project root: /Users/razeenmaroof/research/Finished
Detected `opam` dependency manager for local use
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Unable to read /Users/razeenmaroof/research/Finished/hazelnut/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":5,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/razeenmaroof/research/Finished/hazelnut/hazelnut.rei"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00500679016113ms
Found a `dune` file at /Users/razeenmaroof/research/Finished/hazelnut
]] Making a new jbuilder package at /Users/razeenmaroof/research/Finished/hazelnut
=== Project root: /Users/razeenmaroof/research/Finished
Detected `opam` dependency manager for local use
Sending response {"id": 5, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/razeenmaroof/research/Finished/hazelnut/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":6,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///Users/razeenmaroof/research/Finished/hazelnut/hazelnut.rei"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.00381469726562ms
Found a `dune` file at /Users/razeenmaroof/research/Finished/hazelnut
]] Making a new jbuilder package at /Users/razeenmaroof/research/Finished/hazelnut
=== Project root: /Users/razeenmaroof/research/Finished
Detected `opam` dependency manager for local use
Sending response {"id": 6, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/razeenmaroof/research/Finished/hazelnut/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":7,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///Users/razeenmaroof/research/Finished/hazelnut/hazelnut.rei"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.00619888305664ms
Found a `dune` file at /Users/razeenmaroof/research/Finished/hazelnut
]] Making a new jbuilder package at /Users/razeenmaroof/research/Finished/hazelnut
=== Project root: /Users/razeenmaroof/research/Finished
Detected `opam` dependency manager for local use
Sending response {"id": 7, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/razeenmaroof/research/Finished/hazelnut/.merlin"}}
Found a `dune` file at /Users/razeenmaroof/research/Finished/hazelnut
]] Making a new jbuilder package at /Users/razeenmaroof/research/Finished/hazelnut
=== Project root: /Users/razeenmaroof/research/Finished
Detected `opam` dependency manager for local use
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":7}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":6}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/razeenmaroof/research/Finished/hazelnut/hazelnut.rei"}}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/razeenmaroof/research/Finished/hazelnut/hazelnut.re","languageId":"reason","version":1,"text":"open Sexplib.Std;\n// open Monad_lib.Monad; // Uncomment this line to use the maybe monad\n\nlet compare_string = String.compare;\nlet compare_int = Int.compare;\n\nmodule Htyp = {\n  [@deriving (sexp, compare, show({with_path: false}))]\n  type t =\n    | Arrow(t, t)\n    | Num\n    | Hole;\n};\n\nmodule Hexp = {\n  [@deriving (sexp, compare, show({with_path: false}))]\n  type t =\n    | Var(string)\n    | Lam(string, t)\n    | Ap(t, t)\n    | Lit(int)\n    | Plus(t, t)\n    | Asc(t, Htyp.t)\n    | EHole\n    | NEHole(t);\n};\n\nmodule Ztyp = {\n  [@deriving (sexp, compare, show({with_path: false}))]\n  type t =\n    | Cursor(Htyp.t)\n    | LArrow(t, Htyp.t)\n    | RArrow(Htyp.t, t);\n};\n\nmodule Zexp = {\n  [@deriving (sexp, compare, show({with_path: false}))]\n  type t =\n    | Cursor(Hexp.t)\n    | Lam(string, t)\n    | LAp(t, Hexp.t)\n    | RAp(Hexp.t, t)\n    | LPlus(t, Hexp.t)\n    | RPlus(Hexp.t, t)\n    | LAsc(t, Htyp.t)\n    | RAsc(Hexp.t, Ztyp.t)\n    | NEHole(t);\n};\n\nmodule Child = {\n  [@deriving (sexp, compare)]\n  type t =\n    | One\n    | Two;\n};\n\nmodule Dir = {\n  [@deriving (sexp, compare)]\n  type t =\n    | Child(Child.t)\n    | Parent;\n};\n\nmodule Shape = {\n  [@deriving (sexp, compare)]\n  type t =\n    | Arrow\n    | Num\n    | Asc\n    | Var(string)\n    | Lam(string)\n    | Ap\n    | Lit(int)\n    | Plus\n    | NEHole;\n};\n\nmodule Action = {\n  [@deriving (sexp, compare)]\n  type t =\n    | Move(Dir.t)\n    | Construct(Shape.t)\n    | Del\n    | Finish;\n};\n\nmodule TypCtx = Map.Make(String);\ntype typctx = TypCtx.t(Htyp.t);\n\nexception Unimplemented;\n\nlet erase_exp = (e: Zexp.t): Hexp.t => {\n  // Used to suppress unused variable warnings\n  // Okay to remove\n  let _ = e;\n\n  raise(Unimplemented);\n};\n\nlet syn = (ctx: typctx, e: Hexp.t): option(Htyp.t) => {\n  // Used to suppress unused variable warnings\n  // Okay to remove\n  let _ = ctx;\n  let _ = e;\n\n  raise(Unimplemented);\n}\n\nand ana = (ctx: typctx, e: Hexp.t, t: Htyp.t): bool => {\n  // Used to suppress unused variable warnings\n  // Okay to remove\n  let _ = ctx;\n  let _ = e;\n  let _ = t;\n\n  raise(Unimplemented);\n};\n\nlet syn_action =\n    (ctx: typctx, (e: Zexp.t, t: Htyp.t), a: Action.t)\n    : option((Zexp.t, Htyp.t)) => {\n  // Used to suppress unused variable warnings\n  // Okay to remove\n  let _ = ctx;\n  let _ = e;\n  let _ = t;\n  let _ = a;\n\n  raise(Unimplemented);\n}\n\nand ana_action =\n    (ctx: typctx, e: Zexp.t, a: Action.t, t: Htyp.t): option(Zexp.t) => {\n  // Used to suppress unused variable warnings\n  // Okay to remove\n  let _ = ctx;\n  let _ = e;\n  let _ = a;\n  let _ = t;\n\n  raise(Unimplemented);\n};\n"}}}
Found a `dune` file at /Users/razeenmaroof/research/Finished/hazelnut
]] Making a new jbuilder package at /Users/razeenmaroof/research/Finished/hazelnut
=== Project root: /Users/razeenmaroof/research/Finished
Detected `opam` dependency manager for local use
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Unable to read /Users/razeenmaroof/research/Finished/hazelnut/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":8,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/razeenmaroof/research/Finished/hazelnut/hazelnut.re"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00381469726562ms
Found a `dune` file at /Users/razeenmaroof/research/Finished/hazelnut
]] Making a new jbuilder package at /Users/razeenmaroof/research/Finished/hazelnut
=== Project root: /Users/razeenmaroof/research/Finished
Detected `opam` dependency manager for local use
Sending response {"id": 8, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/razeenmaroof/research/Finished/hazelnut/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":9,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///Users/razeenmaroof/research/Finished/hazelnut/hazelnut.re"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.00381469726562ms
Found a `dune` file at /Users/razeenmaroof/research/Finished/hazelnut
]] Making a new jbuilder package at /Users/razeenmaroof/research/Finished/hazelnut
=== Project root: /Users/razeenmaroof/research/Finished
Detected `opam` dependency manager for local use
Sending response {"id": 9, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/razeenmaroof/research/Finished/hazelnut/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":10,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/razeenmaroof/research/Finished/hazelnut/hazelnut.re"},"range":{"start":{"line":96,"character":0},"end":{"line":97,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00500679016113ms
Found a `dune` file at /Users/razeenmaroof/research/Finished/hazelnut
]] Making a new jbuilder package at /Users/razeenmaroof/research/Finished/hazelnut
=== Project root: /Users/razeenmaroof/research/Finished
Detected `opam` dependency manager for local use
Sending response {"id": 10, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/razeenmaroof/research/Finished/hazelnut/.merlin"}}
Found a `dune` file at /Users/razeenmaroof/research/Finished/hazelnut
]] Making a new jbuilder package at /Users/razeenmaroof/research/Finished/hazelnut
=== Project root: /Users/razeenmaroof/research/Finished
Detected `opam` dependency manager for local use
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":8}}
Read message 
{"jsonrpc":"2.0","id":11,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///Users/razeenmaroof/research/Finished/hazelnut/hazelnut.re"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.00596046447754ms
Found a `dune` file at /Users/razeenmaroof/research/Finished/hazelnut
]] Making a new jbuilder package at /Users/razeenmaroof/research/Finished/hazelnut
=== Project root: /Users/razeenmaroof/research/Finished
Detected `opam` dependency manager for local use
Sending response {"id": 11, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/razeenmaroof/research/Finished/hazelnut/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":12,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/razeenmaroof/research/Finished/hazelnut/hazelnut.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00381469726562ms
Found a `dune` file at /Users/razeenmaroof/research/Finished/hazelnut
]] Making a new jbuilder package at /Users/razeenmaroof/research/Finished/hazelnut
=== Project root: /Users/razeenmaroof/research/Finished
Detected `opam` dependency manager for local use
Sending response {"id": 12, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Unable to read /Users/razeenmaroof/research/Finished/hazelnut/.merlin", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":12}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":11}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/razeenmaroof/research/Finished/hazelnut/hazelnut.re"}}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/razeenmaroof/research/Finished/hazelnut/hazelnut.rei","languageId":"reason","version":1,"text":"module Htyp: {\n  [@deriving (sexp, compare, show({with_path: false}))]\n  type t =\n    | Arrow(t, t)\n    | Num\n    | Hole;\n};\n\nmodule Hexp: {\n  [@deriving (sexp, compare, show({with_path: false}))]\n  type t =\n    | Var(string)\n    | Lam(string, t)\n    | Ap(t, t)\n    | Lit(int)\n    | Plus(t, t)\n    | Asc(t, Htyp.t)\n    | EHole\n    | NEHole(t);\n};\n\nmodule Ztyp: {\n  [@deriving (sexp, compare, show({with_path: false}))]\n  type t =\n    | Cursor(Htyp.t)\n    | LArrow(t, Htyp.t)\n    | RArrow(Htyp.t, t);\n};\n\nmodule Zexp: {\n  [@deriving (sexp, compare, show({with_path: false}))]\n  type t =\n    | Cursor(Hexp.t)\n    | Lam(string, t)\n    | LAp(t, Hexp.t)\n    | RAp(Hexp.t, t)\n    | LPlus(t, Hexp.t)\n    | RPlus(Hexp.t, t)\n    | LAsc(t, Htyp.t)\n    | RAsc(Hexp.t, Ztyp.t)\n    | NEHole(t);\n};\n\nmodule Child: {\n  type t =\n    | One\n    | Two;\n};\n\nmodule Dir: {\n  type t =\n    | Child(Child.t)\n    | Parent;\n};\n\nmodule Shape: {\n  type t =\n    | Arrow\n    | Num\n    | Asc\n    | Var(string)\n    | Lam(string)\n    | Ap\n    | Lit(int)\n    | Plus\n    | NEHole;\n};\n\nmodule Action: {\n  [@deriving (sexp, compare)]\n  type t =\n    | Move(Dir.t)\n    | Construct(Shape.t)\n    | Del\n    | Finish;\n};\n\nmodule TypCtx: {\n  type t('a) = Map.Make(String).t('a);\n  let empty: t('a);\n};\ntype typctx = TypCtx.t(Htyp.t);\n\nexception Unimplemented;\n\nlet erase_exp: Zexp.t => Hexp.t;\nlet syn: (typctx, Hexp.t) => option(Htyp.t);\nlet ana: (typctx, Hexp.t, Htyp.t) => bool;\nlet syn_action:\n  (typctx, (Zexp.t, Htyp.t), Action.t) => option((Zexp.t, Htyp.t));\nlet ana_action: (typctx, Zexp.t, Action.t, Htyp.t) => option(Zexp.t);\n"}}}
Found a `dune` file at /Users/razeenmaroof/research/Finished/hazelnut
]] Making a new jbuilder package at /Users/razeenmaroof/research/Finished/hazelnut
=== Project root: /Users/razeenmaroof/research/Finished
Detected `opam` dependency manager for local use
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Unable to read /Users/razeenmaroof/research/Finished/hazelnut/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":13,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/razeenmaroof/research/Finished/hazelnut/hazelnut.rei"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00309944152832ms
Found a `dune` file at /Users/razeenmaroof/research/Finished/hazelnut
]] Making a new jbuilder package at /Users/razeenmaroof/research/Finished/hazelnut
=== Project root: /Users/razeenmaroof/research/Finished
Detected `opam` dependency manager for local use
Sending response {"id": 13, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/razeenmaroof/research/Finished/hazelnut/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":14,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///Users/razeenmaroof/research/Finished/hazelnut/hazelnut.rei"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.00405311584473ms
Found a `dune` file at /Users/razeenmaroof/research/Finished/hazelnut
]] Making a new jbuilder package at /Users/razeenmaroof/research/Finished/hazelnut
=== Project root: /Users/razeenmaroof/research/Finished
Detected `opam` dependency manager for local use
Sending response {"id": 14, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/razeenmaroof/research/Finished/hazelnut/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":15,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/razeenmaroof/research/Finished/hazelnut/hazelnut.rei"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00309944152832ms
Found a `dune` file at /Users/razeenmaroof/research/Finished/hazelnut
]] Making a new jbuilder package at /Users/razeenmaroof/research/Finished/hazelnut
=== Project root: /Users/razeenmaroof/research/Finished
Detected `opam` dependency manager for local use
Sending response {"id": 15, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Unable to read /Users/razeenmaroof/research/Finished/hazelnut/.merlin", "command": ""}}]}
Found a `dune` file at /Users/razeenmaroof/research/Finished/hazelnut
]] Making a new jbuilder package at /Users/razeenmaroof/research/Finished/hazelnut
=== Project root: /Users/razeenmaroof/research/Finished
Detected `opam` dependency manager for local use
Read message 
{"jsonrpc":"2.0","id":16,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///Users/razeenmaroof/research/Finished/hazelnut/hazelnut.rei"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.00500679016113ms
Found a `dune` file at /Users/razeenmaroof/research/Finished/hazelnut
]] Making a new jbuilder package at /Users/razeenmaroof/research/Finished/hazelnut
=== Project root: /Users/razeenmaroof/research/Finished
Detected `opam` dependency manager for local use
Sending response {"id": 16, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/razeenmaroof/research/Finished/hazelnut/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":15}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":16}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":13}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":14}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/razeenmaroof/research/Finished/test/hazelnut_test.re","languageId":"reason","version":1,"text":"open Alcotest;\n\nlet () =\n  run(\n    \"Hazelnut_tests\",\n    [\n      (\"erase_exp\", Test_erase_exp.erase_exp_tests),\n      (\"syn\", Test_syn.syn_tests),\n      (\"ana\", Test_ana.ana_tests),\n      (\"syn_action\", Test_syn_action.syn_action_tests),\n      (\"ana_action\", Test_ana_action.ana_action_tests),\n      (\"sample 1\", Test_sample1.sample1_tests),\n      (\"sample 2\", Test_sample2.sample2_tests),\n    ],\n  );\n"}}}
Found a `dune` file at /Users/razeenmaroof/research/Finished/test
]] Making a new jbuilder package at /Users/razeenmaroof/research/Finished/test
=== Project root: /Users/razeenmaroof/research/Finished
Detected `opam` dependency manager for local use
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Unable to read /Users/razeenmaroof/research/Finished/test/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":17,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/razeenmaroof/research/Finished/test/hazelnut_test.re"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00286102294922ms
Found a `dune` file at /Users/razeenmaroof/research/Finished/test
]] Making a new jbuilder package at /Users/razeenmaroof/research/Finished/test
=== Project root: /Users/razeenmaroof/research/Finished
Detected `opam` dependency manager for local use
Sending response {"id": 17, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/razeenmaroof/research/Finished/test/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":18,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///Users/razeenmaroof/research/Finished/test/hazelnut_test.re"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.00405311584473ms
Found a `dune` file at /Users/razeenmaroof/research/Finished/test
]] Making a new jbuilder package at /Users/razeenmaroof/research/Finished/test
=== Project root: /Users/razeenmaroof/research/Finished
Detected `opam` dependency manager for local use
Sending response {"id": 18, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/razeenmaroof/research/Finished/test/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":19,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/razeenmaroof/research/Finished/test/hazelnut_test.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00309944152832ms
Found a `dune` file at /Users/razeenmaroof/research/Finished/test
]] Making a new jbuilder package at /Users/razeenmaroof/research/Finished/test
=== Project root: /Users/razeenmaroof/research/Finished
Detected `opam` dependency manager for local use
Sending response {"id": 19, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Unable to read /Users/razeenmaroof/research/Finished/test/.merlin", "command": ""}}]}
Found a `dune` file at /Users/razeenmaroof/research/Finished/test
]] Making a new jbuilder package at /Users/razeenmaroof/research/Finished/test
=== Project root: /Users/razeenmaroof/research/Finished
Detected `opam` dependency manager for local use
Read message 
{"jsonrpc":"2.0","id":20,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/razeenmaroof/research/Finished/test/hazelnut_test.re"},"range":{"start":{"line":12,"character":0},"end":{"line":12,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00596046447754ms
Found a `dune` file at /Users/razeenmaroof/research/Finished/test
]] Making a new jbuilder package at /Users/razeenmaroof/research/Finished/test
=== Project root: /Users/razeenmaroof/research/Finished
Detected `opam` dependency manager for local use
Sending response {"id": 20, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/razeenmaroof/research/Finished/test/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":17}}
Read message 
{"jsonrpc":"2.0","id":21,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///Users/razeenmaroof/research/Finished/test/hazelnut_test.re"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.00476837158203ms
Found a `dune` file at /Users/razeenmaroof/research/Finished/test
]] Making a new jbuilder package at /Users/razeenmaroof/research/Finished/test
=== Project root: /Users/razeenmaroof/research/Finished
Detected `opam` dependency manager for local use
Sending response {"id": 21, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/razeenmaroof/research/Finished/test/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":19}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":21}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":20}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":18}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/razeenmaroof/research/Finished/test/Test_syn_action.re","languageId":"reason","version":1,"text":"open Alcotest;\nopen Test_interface;\nmodule Hazelnut = Hazelnut_lib.Hazelnut;\nmodule TypCtx = Map.Make(String);\ntype typctx = Hazelnut.TypCtx.t(Hazelnut.Htyp.t);\n\nlet test_samove_1 = () => {\n  let ctx: typctx = TypCtx.empty;\n  let ze: Hazelnut.Zexp.t =\n    LAsc(Cursor(Lam(\"x\", EHole)), Arrow(Hole, Hole));\n  let t: Hazelnut.Htyp.t = Arrow(Hole, Hole);\n  let a: Hazelnut.Action.t = Move(Child(One));\n  let given: option((Hazelnut.Zexp.t, Hazelnut.Htyp.t)) =\n    Hazelnut.syn_action(ctx, (ze, t), a);\n  let expected: option((Hazelnut.Zexp.t, Hazelnut.Htyp.t)) =\n    Some((\n      LAsc(Lam(\"x\", Cursor(EHole)), Arrow(Hole, Hole)),\n      Arrow(Hole, Hole),\n    ));\n  check(zexp_htyp, \"same option(Hazelnut.Zexp.t)\", given, expected);\n};\nlet test_sadel_1 = () => {\n  let ctx: typctx = TypCtx.empty;\n  let ze: Hazelnut.Zexp.t = Cursor(Lit(1));\n  let t: Hazelnut.Htyp.t = Num;\n  let a: Hazelnut.Action.t = Del;\n  let given: option((Hazelnut.Zexp.t, Hazelnut.Htyp.t)) =\n    Hazelnut.syn_action(ctx, (ze, t), a);\n  let expected: option((Hazelnut.Zexp.t, Hazelnut.Htyp.t)) =\n    Some((Cursor(EHole), Hole));\n  check(zexp_htyp, \"same option(Hazelnut.Zexp.t)\", given, expected);\n};\nlet test_sadel_2 = () => {\n  let ctx: typctx = TypCtx.empty;\n  let ze: Hazelnut.Zexp.t = NEHole(Cursor(Lit(1)));\n  let t: Hazelnut.Htyp.t = Hole;\n  let a: Hazelnut.Action.t = Del;\n  let given: option((Hazelnut.Zexp.t, Hazelnut.Htyp.t)) =\n    Hazelnut.syn_action(ctx, (ze, t), a);\n  let expected: option((Hazelnut.Zexp.t, Hazelnut.Htyp.t)) =\n    Some((NEHole(Cursor(EHole)), Hole));\n  check(zexp_htyp, \"same option(Hazelnut.Zexp.t)\", given, expected);\n};\nlet test_saconasc_1 = () => {\n  let ctx: typctx = TypCtx.empty;\n  let ze: Hazelnut.Zexp.t = Cursor(Lit(1));\n  let t: Hazelnut.Htyp.t = Num;\n  let a: Hazelnut.Action.t = Construct(Hazelnut.Shape.Asc);\n  let given: option((Hazelnut.Zexp.t, Hazelnut.Htyp.t)) =\n    Hazelnut.syn_action(ctx, (ze, t), a);\n  let expected: option((Hazelnut.Zexp.t, Hazelnut.Htyp.t)) =\n    Some((RAsc(Lit(1), Cursor(Num)), Num));\n  check(zexp_htyp, \"same option(Hazelnut.Zexp.t)\", given, expected);\n};\nlet test_saconasc_2 = () => {\n  let ctx: typctx = TypCtx.empty;\n  let ze: Hazelnut.Zexp.t = Cursor(EHole);\n  let t: Hazelnut.Htyp.t = Hole;\n  let a: Hazelnut.Action.t = Construct(Hazelnut.Shape.Asc);\n  let given: option((Hazelnut.Zexp.t, Hazelnut.Htyp.t)) =\n    Hazelnut.syn_action(ctx, (ze, t), a);\n  let expected: option((Hazelnut.Zexp.t, Hazelnut.Htyp.t)) =\n    Some((RAsc(EHole, Cursor(Hole)), Hole));\n  check(zexp_htyp, \"same option(Hazelnut.Zexp.t)\", given, expected);\n};\nlet test_saconasc_3 = () => {\n  let ctx: typctx = TypCtx.empty;\n  let ze: Hazelnut.Zexp.t = NEHole(Cursor(Lit(1)));\n  let t: Hazelnut.Htyp.t = Hole;\n  let a: Hazelnut.Action.t = Construct(Hazelnut.Shape.Asc);\n  let given: option((Hazelnut.Zexp.t, Hazelnut.Htyp.t)) =\n    Hazelnut.syn_action(ctx, (ze, t), a);\n  let expected: option((Hazelnut.Zexp.t, Hazelnut.Htyp.t)) =\n    Some((NEHole(RAsc(Lit(1), Cursor(Num))), Hole));\n  check(zexp_htyp, \"same option(Hazelnut.Zexp.t)\", given, expected);\n};\nlet test_saconvar_1 = () => {\n  let ctx: typctx = TypCtx.singleton(\"x\", Hazelnut.Htyp.Num);\n  let ze: Hazelnut.Zexp.t = Cursor(EHole);\n  let t: Hazelnut.Htyp.t = Hole;\n  let a: Hazelnut.Action.t = Construct(Hazelnut.Shape.Var(\"x\"));\n  let given: option((Hazelnut.Zexp.t, Hazelnut.Htyp.t)) =\n    Hazelnut.syn_action(ctx, (ze, t), a);\n  let expected: option((Hazelnut.Zexp.t, Hazelnut.Htyp.t)) =\n    Some((Cursor(Var(\"x\")), Num));\n  check(zexp_htyp, \"same option(Hazelnut.Zexp.t)\", given, expected);\n};\nlet test_saconvar_2 = () => {\n  let ctx: typctx = TypCtx.singleton(\"x\", Hazelnut.Htyp.Num);\n  let ze: Hazelnut.Zexp.t = NEHole(Cursor(EHole));\n  let t: Hazelnut.Htyp.t = Hole;\n  let a: Hazelnut.Action.t = Construct(Hazelnut.Shape.Var(\"x\"));\n  let given: option((Hazelnut.Zexp.t, Hazelnut.Htyp.t)) =\n    Hazelnut.syn_action(ctx, (ze, t), a);\n  let expected: option((Hazelnut.Zexp.t, Hazelnut.Htyp.t)) =\n    Some((NEHole(Cursor(Var(\"x\"))), Hole));\n  check(zexp_htyp, \"same option(Hazelnut.Zexp.t)\", given, expected);\n};\nlet test_saconlam_1 = () => {\n  let ctx: typctx = TypCtx.empty;\n  let ze: Hazelnut.Zexp.t = Cursor(EHole);\n  let t: Hazelnut.Htyp.t = Hole;\n  let a: Hazelnut.Action.t = Construct(Hazelnut.Shape.Lam(\"x\"));\n  let given: option((Hazelnut.Zexp.t, Hazelnut.Htyp.t)) =\n    Hazelnut.syn_action(ctx, (ze, t), a);\n  let expected: option((Hazelnut.Zexp.t, Hazelnut.Htyp.t)) =\n    Some((\n      RAsc(Lam(\"x\", EHole), LArrow(Cursor(Hole), Hole)),\n      Arrow(Hole, Hole),\n    ));\n  check(zexp_htyp, \"same option(Hazelnut.Zexp.t)\", given, expected);\n};\nlet test_saconlam_2 = () => {\n  //CHECK THIS ONE\n  let ctx: typctx = TypCtx.empty;\n  let ze: Hazelnut.Zexp.t = NEHole(Cursor(EHole));\n  let t: Hazelnut.Htyp.t = Hole;\n  let a: Hazelnut.Action.t = Construct(Hazelnut.Shape.Lam(\"x\"));\n  let given: option((Hazelnut.Zexp.t, Hazelnut.Htyp.t)) =\n    Hazelnut.syn_action(ctx, (ze, t), a);\n  let expected: option((Hazelnut.Zexp.t, Hazelnut.Htyp.t)) =\n    Some((\n      NEHole(RAsc(Lam(\"x\", EHole), LArrow(Cursor(Hole), Hole))),\n      Hole,\n    ));\n  check(zexp_htyp, \"same option(Hazelnut.Zexp.t)\", given, expected);\n};\nlet test_saconnumlit_1 = () => {\n  let ctx: typctx = TypCtx.empty;\n  let ze: Hazelnut.Zexp.t = Cursor(EHole);\n  let t: Hazelnut.Htyp.t = Hole;\n  let a: Hazelnut.Action.t = Construct(Hazelnut.Shape.Lit(1));\n  let given: option((Hazelnut.Zexp.t, Hazelnut.Htyp.t)) =\n    Hazelnut.syn_action(ctx, (ze, t), a);\n  let expected: option((Hazelnut.Zexp.t, Hazelnut.Htyp.t)) =\n    Some((Cursor(Lit(1)), Num));\n  check(zexp_htyp, \"same option(Hazelnut.Zexp.t)\", given, expected);\n};\nlet test_saconnumlit_2 = () => {\n  let ctx: typctx = TypCtx.empty;\n  let ze: Hazelnut.Zexp.t = NEHole(Cursor(EHole));\n  let t: Hazelnut.Htyp.t = Hole;\n  let a: Hazelnut.Action.t = Construct(Hazelnut.Shape.Lit(1));\n  let given: option((Hazelnut.Zexp.t, Hazelnut.Htyp.t)) =\n    Hazelnut.syn_action(ctx, (ze, t), a);\n  let expected: option((Hazelnut.Zexp.t, Hazelnut.Htyp.t)) =\n    Some((NEHole(Cursor(Lit(1))), Hole));\n  check(zexp_htyp, \"same option(Hazelnut.Zexp.t)\", given, expected);\n};\nlet test_saconnehole_1 = () => {\n  let ctx: typctx = TypCtx.empty;\n  let ze: Hazelnut.Zexp.t = Cursor(Lit(1));\n  let t: Hazelnut.Htyp.t = Num;\n  let a: Hazelnut.Action.t = Construct(Hazelnut.Shape.NEHole);\n  let given: option((Hazelnut.Zexp.t, Hazelnut.Htyp.t)) =\n    Hazelnut.syn_action(ctx, (ze, t), a);\n  let expected: option((Hazelnut.Zexp.t, Hazelnut.Htyp.t)) =\n    Some((NEHole(Cursor(Lit(1))), Hole));\n  check(zexp_htyp, \"same option(Hazelnut.Zexp.t)\", given, expected);\n};\nlet test_saconnehole_2 = () => {\n  let ctx: typctx = TypCtx.empty;\n  let ze: Hazelnut.Zexp.t = NEHole(Cursor(Lit(1)));\n  let t: Hazelnut.Htyp.t = Hole;\n  let a: Hazelnut.Action.t = Construct(Hazelnut.Shape.NEHole);\n  let given: option((Hazelnut.Zexp.t, Hazelnut.Htyp.t)) =\n    Hazelnut.syn_action(ctx, (ze, t), a);\n  let expected: option((Hazelnut.Zexp.t, Hazelnut.Htyp.t)) =\n    Some((NEHole(NEHole(Cursor(Lit(1)))), Hole));\n  check(zexp_htyp, \"same option(Hazelnut.Zexp.t)\", given, expected);\n};\nlet test_saconaparr_1 = () => {\n  let ctx: typctx = TypCtx.empty;\n  let ze: Hazelnut.Zexp.t = Cursor(Lam(\"x\", EHole));\n  let t: Hazelnut.Htyp.t = Arrow(Hole, Hole);\n  let a: Hazelnut.Action.t = Construct(Hazelnut.Shape.Ap);\n  let given: option((Hazelnut.Zexp.t, Hazelnut.Htyp.t)) =\n    Hazelnut.syn_action(ctx, (ze, t), a);\n  let expected: option((Hazelnut.Zexp.t, Hazelnut.Htyp.t)) =\n    Some((RAp(Lam(\"x\", EHole), Cursor(EHole)), Hole));\n  check(zexp_htyp, \"same option(Hazelnut.Zexp.t)\", given, expected);\n};\nlet test_saconapotw_1 = () => {\n  let ctx: typctx = TypCtx.empty;\n  let ze: Hazelnut.Zexp.t = Cursor(Lit(1));\n  let t: Hazelnut.Htyp.t = Num;\n  let a: Hazelnut.Action.t = Construct(Hazelnut.Shape.Ap);\n  let given: option((Hazelnut.Zexp.t, Hazelnut.Htyp.t)) =\n    Hazelnut.syn_action(ctx, (ze, t), a);\n  let expected: option((Hazelnut.Zexp.t, Hazelnut.Htyp.t)) =\n    Some((RAp(NEHole(Lit(1)), Cursor(EHole)), Hole));\n  check(zexp_htyp, \"same option(Hazelnut.Zexp.t)\", given, expected);\n};\nlet test_saconapotw_2 = () => {\n  let ctx: typctx = TypCtx.empty;\n  let ze: Hazelnut.Zexp.t = NEHole(Cursor(Lit(1)));\n  let t: Hazelnut.Htyp.t = Hole;\n  let a: Hazelnut.Action.t = Construct(Hazelnut.Shape.Ap);\n  let given: option((Hazelnut.Zexp.t, Hazelnut.Htyp.t)) =\n    Hazelnut.syn_action(ctx, (ze, t), a);\n  let expected: option((Hazelnut.Zexp.t, Hazelnut.Htyp.t)) =\n    Some((NEHole(RAp(NEHole(Lit(1)), Cursor(EHole))), Hole));\n  check(zexp_htyp, \"same option(Hazelnut.Zexp.t)\", given, expected);\n};\nlet test_saconplus1_1 = () => {\n  let ctx: typctx = TypCtx.empty;\n  let ze: Hazelnut.Zexp.t = Cursor(Lit(1));\n  let t: Hazelnut.Htyp.t = Num;\n  let a: Hazelnut.Action.t = Construct(Hazelnut.Shape.Plus);\n  let given: option((Hazelnut.Zexp.t, Hazelnut.Htyp.t)) =\n    Hazelnut.syn_action(ctx, (ze, t), a);\n  let expected: option((Hazelnut.Zexp.t, Hazelnut.Htyp.t)) =\n    Some((RPlus(Lit(1), Cursor(EHole)), Num));\n  check(zexp_htyp, \"same option(Hazelnut.Zexp.t)\", given, expected);\n};\nlet test_saconplus1_2 = () => {\n  let ctx: typctx = TypCtx.empty;\n  let ze: Hazelnut.Zexp.t = NEHole(Cursor(Lit(1)));\n  let t: Hazelnut.Htyp.t = Hole;\n  let a: Hazelnut.Action.t = Construct(Hazelnut.Shape.Plus);\n  let given: option((Hazelnut.Zexp.t, Hazelnut.Htyp.t)) =\n    Hazelnut.syn_action(ctx, (ze, t), a);\n  let expected: option((Hazelnut.Zexp.t, Hazelnut.Htyp.t)) =\n    Some((NEHole(RPlus(Lit(1), Cursor(EHole))), Hole));\n  check(zexp_htyp, \"same option(Hazelnut.Zexp.t)\", given, expected);\n};\nlet test_saconplus2_1 = () => {\n  let ctx: typctx = TypCtx.empty;\n  let ze: Hazelnut.Zexp.t = Cursor(Lam(\"x\", EHole));\n  let t: Hazelnut.Htyp.t = Arrow(Hole, Hole);\n  let a: Hazelnut.Action.t = Construct(Hazelnut.Shape.Plus);\n  let given: option((Hazelnut.Zexp.t, Hazelnut.Htyp.t)) =\n    Hazelnut.syn_action(ctx, (ze, t), a);\n  let expected: option((Hazelnut.Zexp.t, Hazelnut.Htyp.t)) =\n    Some((RPlus(NEHole(Lam(\"x\", EHole)), Cursor(EHole)), Num));\n  check(zexp_htyp, \"same option(Hazelnut.Zexp.t)\", given, expected);\n};\nlet test_safinish_1 = () => {\n  let ctx: typctx = TypCtx.empty;\n  let ze: Hazelnut.Zexp.t = Cursor(NEHole(Lit(1)));\n  let t: Hazelnut.Htyp.t = Hole;\n  let a: Hazelnut.Action.t = Finish;\n  let given: option((Hazelnut.Zexp.t, Hazelnut.Htyp.t)) =\n    Hazelnut.syn_action(ctx, (ze, t), a);\n  let expected: option((Hazelnut.Zexp.t, Hazelnut.Htyp.t)) =\n    Some((Cursor(Lit(1)), Num));\n  check(zexp_htyp, \"same option(Hazelnut.Zexp.t)\", given, expected);\n};\nlet test_safinish_2 = () => {\n  let ctx: typctx = TypCtx.empty;\n  let ze: Hazelnut.Zexp.t = NEHole(Cursor(NEHole(Lit(1))));\n  let t: Hazelnut.Htyp.t = Hole;\n  let a: Hazelnut.Action.t = Finish;\n  let given: option((Hazelnut.Zexp.t, Hazelnut.Htyp.t)) =\n    Hazelnut.syn_action(ctx, (ze, t), a);\n  let expected: option((Hazelnut.Zexp.t, Hazelnut.Htyp.t)) =\n    Some((NEHole(Cursor(Lit(1))), Hole));\n  check(zexp_htyp, \"same option(Hazelnut.Zexp.t)\", given, expected);\n};\nlet syn_action_tests = [\n  (\"test_samove_1\", `Quick, test_sadel_1),\n  (\"test_sadel_1\", `Quick, test_sadel_1),\n  (\"test_sadel_2\", `Quick, test_sadel_2),\n  (\"test_safinish_1\", `Quick, test_safinish_1),\n  (\"test_safinish_2\", `Quick, test_safinish_2),\n  (\"test_saconasc_1\", `Quick, test_saconasc_1),\n  (\"test_saconasc_2\", `Quick, test_saconasc_2),\n  (\"test_saconasc_3\", `Quick, test_saconasc_3),\n  (\"test_saconvar_1\", `Quick, test_saconvar_1),\n  (\"test_saconvar_2\", `Quick, test_saconvar_2),\n  (\"test_saconlam_1\", `Quick, test_saconlam_1),\n  (\"test_saconlam_2\", `Quick, test_saconlam_2),\n  (\"test_saconnumlit_1\", `Quick, test_saconnumlit_1),\n  (\"test_saconnumlit_2\", `Quick, test_saconnumlit_2),\n  (\"test_saconnehole_1\", `Quick, test_saconnehole_1),\n  (\"test_saconnehole_2\", `Quick, test_saconnehole_2),\n  (\"test_saconaparr_1\", `Quick, test_saconaparr_1),\n  (\"test_saconapotw_1\", `Quick, test_saconapotw_1),\n  (\"test_saconapotw_2\", `Quick, test_saconapotw_2),\n  (\"test_saconplus1_1\", `Quick, test_saconplus1_1),\n  (\"test_saconplus1_2\", `Quick, test_saconplus1_2),\n  (\"test_saconplus2_1\", `Quick, test_saconplus2_1),\n];\n"}}}
Found a `dune` file at /Users/razeenmaroof/research/Finished/test
]] Making a new jbuilder package at /Users/razeenmaroof/research/Finished/test
=== Project root: /Users/razeenmaroof/research/Finished
Detected `opam` dependency manager for local use
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Unable to read /Users/razeenmaroof/research/Finished/test/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":22,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/razeenmaroof/research/Finished/test/Test_syn_action.re"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00596046447754ms
Found a `dune` file at /Users/razeenmaroof/research/Finished/test
]] Making a new jbuilder package at /Users/razeenmaroof/research/Finished/test
=== Project root: /Users/razeenmaroof/research/Finished
Detected `opam` dependency manager for local use
Sending response {"id": 22, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/razeenmaroof/research/Finished/test/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":23,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///Users/razeenmaroof/research/Finished/test/Test_syn_action.re"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.00405311584473ms
Found a `dune` file at /Users/razeenmaroof/research/Finished/test
]] Making a new jbuilder package at /Users/razeenmaroof/research/Finished/test
=== Project root: /Users/razeenmaroof/research/Finished
Detected `opam` dependency manager for local use
Sending response {"id": 23, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/razeenmaroof/research/Finished/test/.merlin"}}
Found a `dune` file at /Users/razeenmaroof/research/Finished/test
]] Making a new jbuilder package at /Users/razeenmaroof/research/Finished/test
=== Project root: /Users/razeenmaroof/research/Finished
Detected `opam` dependency manager for local use
Read message 
{"jsonrpc":"2.0","id":24,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/razeenmaroof/research/Finished/test/Test_syn_action.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00286102294922ms
Found a `dune` file at /Users/razeenmaroof/research/Finished/test
]] Making a new jbuilder package at /Users/razeenmaroof/research/Finished/test
=== Project root: /Users/razeenmaroof/research/Finished
Detected `opam` dependency manager for local use
Sending response {"id": 24, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Unable to read /Users/razeenmaroof/research/Finished/test/.merlin", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":25,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///Users/razeenmaroof/research/Finished/test/Test_syn_action.re"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.00500679016113ms
Found a `dune` file at /Users/razeenmaroof/research/Finished/test
]] Making a new jbuilder package at /Users/razeenmaroof/research/Finished/test
=== Project root: /Users/razeenmaroof/research/Finished
Detected `opam` dependency manager for local use
Sending response {"id": 25, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/razeenmaroof/research/Finished/test/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":24}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":25}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":22}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":23}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/razeenmaroof/research/Finished/test/Test_sample2.re","languageId":"reason","version":1,"text":"open Alcotest;\nopen Test_interface;\nmodule Hazelnut = Hazelnut_lib.Hazelnut;\n\nmodule TypCtx = Map.Make(String);\ntype typctx = Hazelnut.TypCtx.t(Hazelnut.Htyp.t);\n\nlet test_st14 = () => {\n  let ctx: typctx = TypCtx.singleton(\"incr\", Hazelnut.Htyp.Arrow(Num, Num));\n  let ze: Hazelnut.Zexp.t = Cursor(EHole);\n  let t: Hazelnut.Htyp.t = Hole;\n  let a: Hazelnut.Action.t = Construct(Hazelnut.Shape.Var(\"incr\"));\n  let given: option((Hazelnut.Zexp.t, Hazelnut.Htyp.t)) =\n    Hazelnut.syn_action(ctx, (ze, t), a);\n  let expected: option((Hazelnut.Zexp.t, Hazelnut.Htyp.t)) =\n    Some((Cursor(Var(\"incr\")), Arrow(Num, Num)));\n  check(zexp_htyp, \"same option(Hazelnut.Zexp.t)\", given, expected);\n};\n\nlet test_ast14 = () => {\n  let ctx: typctx = TypCtx.singleton(\"incr\", Hazelnut.Htyp.Arrow(Num, Num));\n  let ze: Hazelnut.Zexp.t = Cursor(EHole);\n  let a: Hazelnut.Action.t = Construct(Hazelnut.Shape.Var(\"incr\"));\n  let ht: Hazelnut.Htyp.t = Arrow(Num, Num);\n  let given: option(Hazelnut.Zexp.t) = Hazelnut.ana_action(ctx, ze, a, ht);\n  let expected: option(Hazelnut.Zexp.t) = Some(Cursor(Var(\"incr\")));\n  check(zexp_typ, \"same Hazelnut.Zexp.t\", given, expected);\n};\n\nlet test_st15 = () => {\n  let ctx: typctx = TypCtx.singleton(\"incr\", Hazelnut.Htyp.Arrow(Num, Num));\n  let ze: Hazelnut.Zexp.t = Cursor(Var(\"incr\"));\n  let t: Hazelnut.Htyp.t = Arrow(Num, Num);\n  let a: Hazelnut.Action.t = Construct(Hazelnut.Shape.Ap);\n  let given: option((Hazelnut.Zexp.t, Hazelnut.Htyp.t)) =\n    Hazelnut.syn_action(ctx, (ze, t), a);\n  let expected: option((Hazelnut.Zexp.t, Hazelnut.Htyp.t)) =\n    Some((RAp(Var(\"incr\"), Cursor(EHole)), Arrow(Num, Num)));\n  check(zexp_htyp, \"same option(Hazelnut.Zexp.t)\", given, expected);\n};\n\nlet test_ast15 = () => {\n  let ctx: typctx = TypCtx.singleton(\"incr\", Hazelnut.Htyp.Arrow(Num, Num));\n  let ze: Hazelnut.Zexp.t = Cursor(Var(\"incr\"));\n  let a: Hazelnut.Action.t = Construct(Hazelnut.Shape.Ap);\n  let ht: Hazelnut.Htyp.t = Arrow(Num, Num);\n  let given: option(Hazelnut.Zexp.t) = Hazelnut.ana_action(ctx, ze, a, ht);\n  let expected: option(Hazelnut.Zexp.t) =\n    Some(RAp(Var(\"incr\"), Cursor(EHole)));\n  check(zexp_typ, \"same Hazelnut.Zexp.t\", given, expected);\n};\n\nlet test_st16 = () => {\n  let ctx: typctx = TypCtx.singleton(\"incr\", Hazelnut.Htyp.Arrow(Num, Num));\n  let ze: Hazelnut.Zexp.t = RAp(Var(\"incr\"), Cursor(EHole));\n  let t: Hazelnut.Htyp.t = Arrow(Num, Num);\n  let a: Hazelnut.Action.t = Construct(Hazelnut.Shape.Var(\"incr\"));\n  let given: option((Hazelnut.Zexp.t, Hazelnut.Htyp.t)) =\n    Hazelnut.syn_action(ctx, (ze, t), a);\n  let expected: option((Hazelnut.Zexp.t, Hazelnut.Htyp.t)) =\n    Some((\n      RAp(Var(\"incr\"), NEHole(Cursor(Var(\"incr\")))),\n      Arrow(Num, Num),\n    ));\n  check(zexp_htyp, \"same option(Hazelnut.Zexp.t)\", given, expected);\n};\n\nlet test_ast16 = () => {\n  let ctx: typctx = TypCtx.singleton(\"incr\", Hazelnut.Htyp.Arrow(Num, Num));\n  let ze: Hazelnut.Zexp.t = RAp(Var(\"incr\"), Cursor(EHole));\n  let a: Hazelnut.Action.t = Construct(Hazelnut.Shape.Var(\"incr\"));\n  let ht: Hazelnut.Htyp.t = Arrow(Num, Num);\n  let given: option(Hazelnut.Zexp.t) = Hazelnut.ana_action(ctx, ze, a, ht);\n  let expected: option(Hazelnut.Zexp.t) =\n    Some(RAp(Var(\"incr\"), NEHole(Cursor(Var(\"incr\")))));\n  check(zexp_typ, \"same Hazelnut.Zexp.t\", given, expected);\n};\n\nlet test_st17 = () => {\n  let ctx: typctx = TypCtx.singleton(\"incr\", Hazelnut.Htyp.Arrow(Num, Num));\n  let ze: Hazelnut.Zexp.t = RAp(Var(\"incr\"), NEHole(Cursor(Var(\"incr\"))));\n  let t: Hazelnut.Htyp.t = Arrow(Num, Num);\n  let a: Hazelnut.Action.t = Construct(Hazelnut.Shape.Ap);\n  let given: option((Hazelnut.Zexp.t, Hazelnut.Htyp.t)) =\n    Hazelnut.syn_action(ctx, (ze, t), a);\n  let expected: option((Hazelnut.Zexp.t, Hazelnut.Htyp.t)) =\n    Some((\n      RAp(Var(\"incr\"), NEHole(RAp(Var(\"incr\"), Cursor(EHole)))),\n      Arrow(Num, Num),\n    ));\n  check(zexp_htyp, \"same option(Hazelnut.Zexp.t)\", given, expected);\n};\n\nlet test_ast17 = () => {\n  let ctx: typctx = TypCtx.singleton(\"incr\", Hazelnut.Htyp.Arrow(Num, Num));\n  let ze: Hazelnut.Zexp.t = RAp(Var(\"incr\"), NEHole(Cursor(Var(\"incr\"))));\n  let a: Hazelnut.Action.t = Construct(Hazelnut.Shape.Ap);\n  let ht: Hazelnut.Htyp.t = Arrow(Num, Num);\n  let given: option(Hazelnut.Zexp.t) = Hazelnut.ana_action(ctx, ze, a, ht);\n  let expected: option(Hazelnut.Zexp.t) =\n    Some(RAp(Var(\"incr\"), NEHole(RAp(Var(\"incr\"), Cursor(EHole)))));\n  check(zexp_typ, \"same Hazelnut.Zexp.t\", given, expected);\n};\n\nlet test_st18 = () => {\n  let ctx: typctx = TypCtx.singleton(\"incr\", Hazelnut.Htyp.Arrow(Num, Num));\n  let ze: Hazelnut.Zexp.t =\n    RAp(Var(\"incr\"), NEHole(RAp(Var(\"incr\"), Cursor(EHole))));\n  let t: Hazelnut.Htyp.t = Arrow(Num, Num);\n  let a: Hazelnut.Action.t = Construct(Hazelnut.Shape.Lit(3));\n  let given: option((Hazelnut.Zexp.t, Hazelnut.Htyp.t)) =\n    Hazelnut.syn_action(ctx, (ze, t), a);\n  let expected: option((Hazelnut.Zexp.t, Hazelnut.Htyp.t)) =\n    Some((\n      RAp(Var(\"incr\"), NEHole(RAp(Var(\"incr\"), Cursor(Lit(3))))),\n      Arrow(Num, Num),\n    ));\n  check(zexp_htyp, \"same option(Hazelnut.Zexp.t)\", given, expected);\n};\n\nlet test_ast18 = () => {\n  let ctx: typctx = TypCtx.singleton(\"incr\", Hazelnut.Htyp.Arrow(Num, Num));\n  let ze: Hazelnut.Zexp.t =\n    RAp(Var(\"incr\"), NEHole(RAp(Var(\"incr\"), Cursor(EHole))));\n  let a: Hazelnut.Action.t = Construct(Hazelnut.Shape.Lit(3));\n  let ht: Hazelnut.Htyp.t = Arrow(Num, Num);\n  let given: option(Hazelnut.Zexp.t) = Hazelnut.ana_action(ctx, ze, a, ht);\n  let expected: option(Hazelnut.Zexp.t) =\n    Some(RAp(Var(\"incr\"), NEHole(RAp(Var(\"incr\"), Cursor(Lit(3))))));\n  check(zexp_typ, \"same Hazelnut.Zexp.t\", given, expected);\n};\n\nlet test_st19 = () => {\n  let ctx: typctx = TypCtx.singleton(\"incr\", Hazelnut.Htyp.Arrow(Num, Num));\n  let ze: Hazelnut.Zexp.t =\n    RAp(Var(\"incr\"), NEHole(RAp(Var(\"incr\"), Cursor(Lit(3)))));\n  let t: Hazelnut.Htyp.t = Arrow(Num, Num);\n  let a: Hazelnut.Action.t = Move(Parent);\n  let given: option((Hazelnut.Zexp.t, Hazelnut.Htyp.t)) =\n    Hazelnut.syn_action(ctx, (ze, t), a);\n  let expected: option((Hazelnut.Zexp.t, Hazelnut.Htyp.t)) =\n    Some((\n      RAp(Var(\"incr\"), NEHole(Cursor(Ap(Var(\"incr\"), Lit(3))))),\n      Arrow(Num, Num),\n    ));\n  check(zexp_htyp, \"same option(Hazelnut.Zexp.t)\", given, expected);\n};\n\nlet test_ast19 = () => {\n  let ctx: typctx = TypCtx.singleton(\"incr\", Hazelnut.Htyp.Arrow(Num, Num));\n  let ze: Hazelnut.Zexp.t =\n    RAp(Var(\"incr\"), NEHole(RAp(Var(\"incr\"), Cursor(Lit(3)))));\n  let a: Hazelnut.Action.t = Move(Parent);\n  let ht: Hazelnut.Htyp.t = Arrow(Num, Num);\n  let given: option(Hazelnut.Zexp.t) = Hazelnut.ana_action(ctx, ze, a, ht);\n  let expected: option(Hazelnut.Zexp.t) =\n    Some(RAp(Var(\"incr\"), NEHole(Cursor(Ap(Var(\"incr\"), Lit(3))))));\n  check(zexp_typ, \"same Hazelnut.Zexp.t\", given, expected);\n};\n\nlet test_st20 = () => {\n  let ctx: typctx = TypCtx.singleton(\"incr\", Hazelnut.Htyp.Arrow(Num, Num));\n  let ze: Hazelnut.Zexp.t =\n    RAp(Var(\"incr\"), NEHole(Cursor(Ap(Var(\"incr\"), Lit(3)))));\n  let t: Hazelnut.Htyp.t = Arrow(Num, Num);\n  let a: Hazelnut.Action.t = Move(Parent);\n  let given: option((Hazelnut.Zexp.t, Hazelnut.Htyp.t)) =\n    Hazelnut.syn_action(ctx, (ze, t), a);\n  let expected: option((Hazelnut.Zexp.t, Hazelnut.Htyp.t)) =\n    Some((\n      RAp(Var(\"incr\"), Cursor(NEHole(Ap(Var(\"incr\"), Lit(3))))),\n      Arrow(Num, Num),\n    ));\n  check(zexp_htyp, \"same option(Hazelnut.Zexp.t)\", given, expected);\n};\n\nlet test_ast20 = () => {\n  let ctx: typctx = TypCtx.singleton(\"incr\", Hazelnut.Htyp.Arrow(Num, Num));\n  let ze: Hazelnut.Zexp.t =\n    RAp(Var(\"incr\"), NEHole(Cursor(Ap(Var(\"incr\"), Lit(3)))));\n  let a: Hazelnut.Action.t = Move(Parent);\n  let ht: Hazelnut.Htyp.t = Arrow(Num, Num);\n  let given: option(Hazelnut.Zexp.t) = Hazelnut.ana_action(ctx, ze, a, ht);\n  let expected: option(Hazelnut.Zexp.t) =\n    Some(RAp(Var(\"incr\"), Cursor(NEHole(Ap(Var(\"incr\"), Lit(3))))));\n  check(zexp_typ, \"same Hazelnut.Zexp.t\", given, expected);\n};\n\nlet test_st21 = () => {\n  let ctx: typctx = TypCtx.singleton(\"incr\", Hazelnut.Htyp.Arrow(Num, Num));\n  let ze: Hazelnut.Zexp.t =\n    RAp(Var(\"incr\"), Cursor(NEHole(Ap(Var(\"incr\"), Lit(3)))));\n  let t: Hazelnut.Htyp.t = Arrow(Num, Num);\n  let a: Hazelnut.Action.t = Finish;\n  let given: option((Hazelnut.Zexp.t, Hazelnut.Htyp.t)) =\n    Hazelnut.syn_action(ctx, (ze, t), a);\n  let expected: option((Hazelnut.Zexp.t, Hazelnut.Htyp.t)) =\n    Some((\n      RAp(Var(\"incr\"), Cursor(Ap(Var(\"incr\"), Lit(3)))),\n      Arrow(Num, Num),\n    ));\n  check(zexp_htyp, \"same option(Hazelnut.Zexp.t)\", given, expected);\n};\n\nlet test_ast21 = () => {\n  let ctx: typctx = TypCtx.singleton(\"incr\", Hazelnut.Htyp.Arrow(Num, Num));\n  let ze: Hazelnut.Zexp.t =\n    RAp(Var(\"incr\"), Cursor(NEHole(Ap(Var(\"incr\"), Lit(3)))));\n  let a: Hazelnut.Action.t = Finish;\n  let ht: Hazelnut.Htyp.t = Arrow(Num, Num);\n  let given: option(Hazelnut.Zexp.t) = Hazelnut.ana_action(ctx, ze, a, ht);\n  let expected: option(Hazelnut.Zexp.t) =\n    Some(RAp(Var(\"incr\"), Cursor(Ap(Var(\"incr\"), Lit(3)))));\n  check(zexp_typ, \"same Hazelnut.Zexp.t\", given, expected);\n};\n\nlet sample2_tests = [\n  (\"test_st14\", `Quick, test_st14),\n  (\"test_ast14\", `Quick, test_ast14),\n  (\"test_st15\", `Quick, test_st15),\n  (\"test_ast15\", `Quick, test_ast15),\n  (\"test_st16\", `Quick, test_st16),\n  (\"test_ast16\", `Quick, test_ast16),\n  (\"test_st17\", `Quick, test_st17),\n  (\"test_ast17\", `Quick, test_ast17),\n  (\"test_st18\", `Quick, test_st18),\n  (\"test_ast18\", `Quick, test_ast18),\n  (\"test_st19\", `Quick, test_st19),\n  (\"test_ast19\", `Quick, test_ast19),\n  (\"test_st20\", `Quick, test_st20),\n  (\"test_ast20\", `Quick, test_ast20),\n  (\"test_st21\", `Quick, test_st21),\n  (\"test_ast21\", `Quick, test_ast21),\n];\n"}}}
Found a `dune` file at /Users/razeenmaroof/research/Finished/test
]] Making a new jbuilder package at /Users/razeenmaroof/research/Finished/test
=== Project root: /Users/razeenmaroof/research/Finished
Detected `opam` dependency manager for local use
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Unable to read /Users/razeenmaroof/research/Finished/test/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":26,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/razeenmaroof/research/Finished/test/Test_sample2.re"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00381469726562ms
Found a `dune` file at /Users/razeenmaroof/research/Finished/test
]] Making a new jbuilder package at /Users/razeenmaroof/research/Finished/test
=== Project root: /Users/razeenmaroof/research/Finished
Detected `opam` dependency manager for local use
Sending response {"id": 26, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/razeenmaroof/research/Finished/test/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":27,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///Users/razeenmaroof/research/Finished/test/Test_sample2.re"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.00309944152832ms
Found a `dune` file at /Users/razeenmaroof/research/Finished/test
]] Making a new jbuilder package at /Users/razeenmaroof/research/Finished/test
=== Project root: /Users/razeenmaroof/research/Finished
Detected `opam` dependency manager for local use
Sending response {"id": 27, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/razeenmaroof/research/Finished/test/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":28,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/razeenmaroof/research/Finished/test/Test_sample2.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00500679016113ms
Found a `dune` file at /Users/razeenmaroof/research/Finished/test
]] Making a new jbuilder package at /Users/razeenmaroof/research/Finished/test
=== Project root: /Users/razeenmaroof/research/Finished
Detected `opam` dependency manager for local use
Sending response {"id": 28, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Unable to read /Users/razeenmaroof/research/Finished/test/.merlin", "command": ""}}]}
Found a `dune` file at /Users/razeenmaroof/research/Finished/test
]] Making a new jbuilder package at /Users/razeenmaroof/research/Finished/test
=== Project root: /Users/razeenmaroof/research/Finished
Detected `opam` dependency manager for local use
Read message 
{"jsonrpc":"2.0","id":29,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///Users/razeenmaroof/research/Finished/test/Test_sample2.re"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.00286102294922ms
Found a `dune` file at /Users/razeenmaroof/research/Finished/test
]] Making a new jbuilder package at /Users/razeenmaroof/research/Finished/test
=== Project root: /Users/razeenmaroof/research/Finished
Detected `opam` dependency manager for local use
Sending response {"id": 29, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/razeenmaroof/research/Finished/test/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":28}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":29}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":26}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":27}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/razeenmaroof/research/Finished/test/Test_sample1.re","languageId":"reason","version":1,"text":"open Alcotest;\nopen Test_interface;\nmodule Hazelnut = Hazelnut_lib.Hazelnut;\n\nmodule TypCtx = Map.Make(String);\ntype typctx = Hazelnut.TypCtx.t(Hazelnut.Htyp.t);\n\nlet test_st1 = () => {\n  let ctx: typctx = TypCtx.empty;\n  let ze: Hazelnut.Zexp.t = Cursor(EHole);\n  let t: Hazelnut.Htyp.t = Hole;\n  let a: Hazelnut.Action.t = Construct(Hazelnut.Shape.Lam(\"x\"));\n  let given: option((Hazelnut.Zexp.t, Hazelnut.Htyp.t)) =\n    Hazelnut.syn_action(ctx, (ze, t), a);\n  let expected: option((Hazelnut.Zexp.t, Hazelnut.Htyp.t)) =\n    Some((\n      RAsc(Lam(\"x\", EHole), LArrow(Cursor(Hole), Hole)),\n      Arrow(Hole, Hole),\n    ));\n  check(zexp_htyp, \"same option(Hazelnut.Zexp.t)\", given, expected);\n};\n\nlet test_ast1 = () => {\n  let ctx: typctx = TypCtx.empty;\n  let ze: Hazelnut.Zexp.t = Cursor(EHole);\n  let a: Hazelnut.Action.t = Construct(Hazelnut.Shape.Lam(\"x\"));\n  let ht: Hazelnut.Htyp.t = Arrow(Hole, Hole);\n  let given: option(Hazelnut.Zexp.t) = Hazelnut.ana_action(ctx, ze, a, ht);\n  let expected: option(Hazelnut.Zexp.t) = Some(Lam(\"x\", Cursor(EHole)));\n  check(zexp_typ, \"same Hazelnut.Zexp.t\", given, expected);\n};\n\nlet test_st2 = () => {\n  let ctx: typctx = TypCtx.empty;\n  let ze: Hazelnut.Zexp.t =\n    RAsc(Lam(\"x\", EHole), LArrow(Cursor(Hole), Hole));\n  let t: Hazelnut.Htyp.t = Arrow(Hole, Hole);\n  let a: Hazelnut.Action.t = Construct(Hazelnut.Shape.Num);\n  let given: option((Hazelnut.Zexp.t, Hazelnut.Htyp.t)) =\n    Hazelnut.syn_action(ctx, (ze, t), a);\n  let expected: option((Hazelnut.Zexp.t, Hazelnut.Htyp.t)) =\n    Some((\n      RAsc(Lam(\"x\", EHole), LArrow(Cursor(Num), Hole)),\n      Arrow(Num, Hole),\n    ));\n  check(zexp_htyp, \"same option(Hazelnut.Zexp.t)\", given, expected);\n};\n\nlet test_ast2 = () => {\n  let ctx: typctx = TypCtx.empty;\n  let ze: Hazelnut.Zexp.t =\n    RAsc(Lam(\"x\", EHole), LArrow(Cursor(Hole), Hole));\n  let a: Hazelnut.Action.t = Construct(Hazelnut.Shape.Num);\n  let ht: Hazelnut.Htyp.t = Arrow(Num, Hole);\n  let given: option(Hazelnut.Zexp.t) = Hazelnut.ana_action(ctx, ze, a, ht);\n  let expected: option(Hazelnut.Zexp.t) =\n    Some(RAsc(Lam(\"x\", EHole), LArrow(Cursor(Num), Hole)));\n  check(zexp_typ, \"same Hazelnut.Zexp.t\", given, expected);\n};\n\nlet test_st3 = () => {\n  let ctx: typctx = TypCtx.empty;\n  let ze: Hazelnut.Zexp.t =\n    RAsc(Lam(\"x\", EHole), LArrow(Cursor(Num), Hole));\n  let t: Hazelnut.Htyp.t = Arrow(Num, Hole);\n  let a: Hazelnut.Action.t = Move(Parent);\n  let given: option((Hazelnut.Zexp.t, Hazelnut.Htyp.t)) =\n    Hazelnut.syn_action(ctx, (ze, t), a);\n  let expected: option((Hazelnut.Zexp.t, Hazelnut.Htyp.t)) =\n    Some((\n      RAsc(Lam(\"x\", EHole), Cursor(Arrow(Num, Hole))),\n      Arrow(Num, Hole),\n    ));\n  check(zexp_htyp, \"same option(Hazelnut.Zexp.t)\", given, expected);\n};\n\nlet test_ast3 = () => {\n  let ctx: typctx = TypCtx.empty;\n  let ze: Hazelnut.Zexp.t =\n    RAsc(Lam(\"x\", EHole), LArrow(Cursor(Num), Hole));\n  let a: Hazelnut.Action.t = Move(Parent);\n  let ht: Hazelnut.Htyp.t = Arrow(Num, Hole);\n  let given: option(Hazelnut.Zexp.t) = Hazelnut.ana_action(ctx, ze, a, ht);\n  let expected: option(Hazelnut.Zexp.t) =\n    Some(RAsc(Lam(\"x\", EHole), Cursor(Arrow(Num, Hole))));\n  check(zexp_typ, \"same Hazelnut.Zexp.t\", given, expected);\n};\n\nlet test_st4 = () => {\n  let ctx: typctx = TypCtx.empty;\n  let ze: Hazelnut.Zexp.t =\n    RAsc(Lam(\"x\", EHole), Cursor(Arrow(Num, Hole)));\n  let t: Hazelnut.Htyp.t = Arrow(Num, Hole);\n  let a: Hazelnut.Action.t = Move(Child(Two));\n  let given: option((Hazelnut.Zexp.t, Hazelnut.Htyp.t)) =\n    Hazelnut.syn_action(ctx, (ze, t), a);\n  let expected: option((Hazelnut.Zexp.t, Hazelnut.Htyp.t)) =\n    Some((\n      RAsc(Lam(\"x\", EHole), RArrow(Num, Cursor(Hole))),\n      Arrow(Num, Hole),\n    ));\n  check(zexp_htyp, \"same option(Hazelnut.Zexp.t)\", given, expected);\n};\n\nlet test_ast4 = () => {\n  let ctx: typctx = TypCtx.empty;\n  let ze: Hazelnut.Zexp.t =\n    RAsc(Lam(\"x\", EHole), Cursor(Arrow(Num, Hole)));\n  let a: Hazelnut.Action.t = Move(Child(Two));\n  let ht: Hazelnut.Htyp.t = Arrow(Num, Hole);\n  let given: option(Hazelnut.Zexp.t) = Hazelnut.ana_action(ctx, ze, a, ht);\n  let expected: option(Hazelnut.Zexp.t) =\n    Some(RAsc(Lam(\"x\", EHole), RArrow(Num, Cursor(Hole))));\n  check(zexp_typ, \"same Hazelnut.Zexp.t\", given, expected);\n};\n\nlet test_st5 = () => {\n  let ctx: typctx = TypCtx.empty;\n  let ze: Hazelnut.Zexp.t =\n    RAsc(Lam(\"x\", EHole), RArrow(Num, Cursor(Hole)));\n  let t: Hazelnut.Htyp.t = Arrow(Num, Hole);\n  let a: Hazelnut.Action.t = Construct(Hazelnut.Shape.Num);\n  let given: option((Hazelnut.Zexp.t, Hazelnut.Htyp.t)) =\n    Hazelnut.syn_action(ctx, (ze, t), a);\n  let expected: option((Hazelnut.Zexp.t, Hazelnut.Htyp.t)) =\n    Some((\n      RAsc(Lam(\"x\", EHole), RArrow(Num, Cursor(Num))),\n      Arrow(Num, Num),\n    ));\n  check(zexp_htyp, \"same option(Hazelnut.Zexp.t)\", given, expected);\n};\n\nlet test_ast5 = () => {\n  let ctx: typctx = TypCtx.empty;\n  let ze: Hazelnut.Zexp.t =\n    RAsc(Lam(\"x\", EHole), RArrow(Num, Cursor(Hole)));\n  let a: Hazelnut.Action.t = Construct(Hazelnut.Shape.Num);\n  let ht: Hazelnut.Htyp.t = Arrow(Num, Num);\n  let given: option(Hazelnut.Zexp.t) = Hazelnut.ana_action(ctx, ze, a, ht);\n  let expected: option(Hazelnut.Zexp.t) =\n    Some(RAsc(Lam(\"x\", EHole), RArrow(Num, Cursor(Num))));\n  check(zexp_typ, \"same Hazelnut.Zexp.t\", given, expected);\n};\n\nlet test_st6 = () => {\n  let ctx: typctx = TypCtx.empty;\n  let ze: Hazelnut.Zexp.t =\n    RAsc(Lam(\"x\", EHole), RArrow(Num, Cursor(Num)));\n  let t: Hazelnut.Htyp.t = Arrow(Num, Num);\n  let a: Hazelnut.Action.t = Move(Parent);\n  let given: option((Hazelnut.Zexp.t, Hazelnut.Htyp.t)) =\n    Hazelnut.syn_action(ctx, (ze, t), a);\n  let expected: option((Hazelnut.Zexp.t, Hazelnut.Htyp.t)) =\n    Some((\n      RAsc(Lam(\"x\", EHole), Cursor(Arrow(Num, Num))),\n      Arrow(Num, Num),\n    ));\n  check(zexp_htyp, \"same option(Hazelnut.Zexp.t)\", given, expected);\n};\n\nlet test_ast6 = () => {\n  let ctx: typctx = TypCtx.empty;\n  let ze: Hazelnut.Zexp.t =\n    RAsc(Lam(\"x\", EHole), RArrow(Num, Cursor(Num)));\n  let a: Hazelnut.Action.t = Move(Parent);\n  let ht: Hazelnut.Htyp.t = Arrow(Num, Num);\n  let given: option(Hazelnut.Zexp.t) = Hazelnut.ana_action(ctx, ze, a, ht);\n  let expected: option(Hazelnut.Zexp.t) =\n    Some(RAsc(Lam(\"x\", EHole), Cursor(Arrow(Num, Num))));\n  check(zexp_typ, \"same Hazelnut.Zexp.t\", given, expected);\n};\n\nlet test_st7 = () => {\n  let ctx: typctx = TypCtx.empty;\n  let ze: Hazelnut.Zexp.t = RAsc(Lam(\"x\", EHole), Cursor(Arrow(Num, Num)));\n  let t: Hazelnut.Htyp.t = Arrow(Num, Num);\n  let a: Hazelnut.Action.t = Move(Parent);\n  let given: option((Hazelnut.Zexp.t, Hazelnut.Htyp.t)) =\n    Hazelnut.syn_action(ctx, (ze, t), a);\n  let expected: option((Hazelnut.Zexp.t, Hazelnut.Htyp.t)) =\n    Some((\n      Cursor(Asc(Lam(\"x\", EHole), Arrow(Num, Num))),\n      Arrow(Num, Num),\n    ));\n  check(zexp_htyp, \"same option(Hazelnut.Zexp.t)\", given, expected);\n};\n\nlet test_ast7 = () => {\n  let ctx: typctx = TypCtx.empty;\n  let ze: Hazelnut.Zexp.t = RAsc(Lam(\"x\", EHole), Cursor(Arrow(Num, Num)));\n  let a: Hazelnut.Action.t = Move(Parent);\n  let ht: Hazelnut.Htyp.t = Arrow(Num, Num);\n  let given: option(Hazelnut.Zexp.t) = Hazelnut.ana_action(ctx, ze, a, ht);\n  let expected: option(Hazelnut.Zexp.t) =\n    Some(Cursor(Asc(Lam(\"x\", EHole), Arrow(Num, Num))));\n  check(zexp_typ, \"same Hazelnut.Zexp.t\", given, expected);\n};\n\nlet test_st8 = () => {\n  let ctx: typctx = TypCtx.empty;\n  let ze: Hazelnut.Zexp.t = Cursor(Asc(Lam(\"x\", EHole), Arrow(Num, Num)));\n  let t: Hazelnut.Htyp.t = Arrow(Num, Num);\n  let a: Hazelnut.Action.t = Move(Child(One));\n  let given: option((Hazelnut.Zexp.t, Hazelnut.Htyp.t)) =\n    Hazelnut.syn_action(ctx, (ze, t), a);\n  let expected: option((Hazelnut.Zexp.t, Hazelnut.Htyp.t)) =\n    Some((\n      LAsc(Cursor(Lam(\"x\", EHole)), Arrow(Num, Num)),\n      Arrow(Num, Num),\n    ));\n  check(zexp_htyp, \"same option(Hazelnut.Zexp.t)\", given, expected);\n};\n\nlet test_ast8 = () => {\n  let ctx: typctx = TypCtx.empty;\n  let ze: Hazelnut.Zexp.t = Cursor(Asc(Lam(\"x\", EHole), Arrow(Num, Num)));\n  let a: Hazelnut.Action.t = Move(Child(One));\n  let ht: Hazelnut.Htyp.t = Arrow(Num, Num);\n  let given: option(Hazelnut.Zexp.t) = Hazelnut.ana_action(ctx, ze, a, ht);\n  let expected: option(Hazelnut.Zexp.t) =\n    Some(LAsc(Cursor(Lam(\"x\", EHole)), Arrow(Num, Num)));\n  check(zexp_typ, \"same Hazelnut.Zexp.t\", given, expected);\n};\n\nlet test_st9 = () => {\n  let ctx: typctx = TypCtx.empty;\n  let ze: Hazelnut.Zexp.t = LAsc(Cursor(Lam(\"x\", EHole)), Arrow(Num, Num));\n  let t: Hazelnut.Htyp.t = Arrow(Num, Num);\n  let a: Hazelnut.Action.t = Move(Child(One));\n  let given: option((Hazelnut.Zexp.t, Hazelnut.Htyp.t)) =\n    Hazelnut.syn_action(ctx, (ze, t), a);\n  let expected: option((Hazelnut.Zexp.t, Hazelnut.Htyp.t)) =\n    Some((\n      LAsc(Lam(\"x\", Cursor(EHole)), Arrow(Num, Num)),\n      Arrow(Num, Num),\n    ));\n  check(zexp_htyp, \"same option(Hazelnut.Zexp.t)\", given, expected);\n};\n\nlet test_ast9 = () => {\n  let ctx: typctx = TypCtx.empty;\n  let ze: Hazelnut.Zexp.t = LAsc(Cursor(Lam(\"x\", EHole)), Arrow(Num, Num));\n  let a: Hazelnut.Action.t = Move(Child(One));\n  let ht: Hazelnut.Htyp.t = Arrow(Num, Num);\n  let given: option(Hazelnut.Zexp.t) = Hazelnut.ana_action(ctx, ze, a, ht);\n  let expected: option(Hazelnut.Zexp.t) =\n    Some(LAsc(Lam(\"x\", Cursor(EHole)), Arrow(Num, Num)));\n  check(zexp_typ, \"same Hazelnut.Zexp.t\", given, expected);\n};\n\nlet test_st10 = () => {\n  let ctx: typctx = TypCtx.singleton(\"x\", Hazelnut.Htyp.Num);\n  let ze: Hazelnut.Zexp.t = LAsc(Lam(\"x\", Cursor(EHole)), Arrow(Num, Num));\n  let t: Hazelnut.Htyp.t = Arrow(Num, Num);\n  let a: Hazelnut.Action.t = Construct(Hazelnut.Shape.Var(\"x\"));\n  let given: option((Hazelnut.Zexp.t, Hazelnut.Htyp.t)) =\n    Hazelnut.syn_action(ctx, (ze, t), a);\n  let expected: option((Hazelnut.Zexp.t, Hazelnut.Htyp.t)) =\n    Some((\n      LAsc(Lam(\"x\", Cursor(Var(\"x\"))), Arrow(Num, Num)),\n      Arrow(Num, Num),\n    ));\n  check(zexp_htyp, \"same option(Hazelnut.Zexp.t)\", given, expected);\n};\n\nlet test_ast10 = () => {\n  let ctx: typctx = TypCtx.singleton(\"x\", Hazelnut.Htyp.Num);\n  let ze: Hazelnut.Zexp.t = LAsc(Lam(\"x\", Cursor(EHole)), Arrow(Num, Num));\n  let a: Hazelnut.Action.t = Construct(Hazelnut.Shape.Var(\"x\"));\n  let ht: Hazelnut.Htyp.t = Arrow(Num, Num);\n  let given: option(Hazelnut.Zexp.t) = Hazelnut.ana_action(ctx, ze, a, ht);\n  let expected: option(Hazelnut.Zexp.t) =\n    Some(LAsc(Lam(\"x\", Cursor(Var(\"x\"))), Arrow(Num, Num)));\n  check(zexp_typ, \"same Hazelnut.Zexp.t\", given, expected);\n};\n\nlet test_st11 = () => {\n  let ctx: typctx = TypCtx.singleton(\"x\", Hazelnut.Htyp.Num);\n  let ze: Hazelnut.Zexp.t =\n    LAsc(Lam(\"x\", Cursor(Var(\"x\"))), Arrow(Num, Num));\n  let t: Hazelnut.Htyp.t = Arrow(Num, Num);\n  let a: Hazelnut.Action.t = Construct(Hazelnut.Shape.Plus);\n  let given: option((Hazelnut.Zexp.t, Hazelnut.Htyp.t)) =\n    Hazelnut.syn_action(ctx, (ze, t), a);\n  let expected: option((Hazelnut.Zexp.t, Hazelnut.Htyp.t)) =\n    Some((\n      LAsc(Lam(\"x\", RPlus(Var(\"x\"), Cursor(EHole))), Arrow(Num, Num)),\n      Arrow(Num, Num),\n    ));\n  check(zexp_htyp, \"same option(Hazelnut.Zexp.t)\", given, expected);\n};\n\nlet test_ast11 = () => {\n  let ctx: typctx = TypCtx.singleton(\"x\", Hazelnut.Htyp.Num);\n  let ze: Hazelnut.Zexp.t =\n    LAsc(Lam(\"x\", Cursor(Var(\"x\"))), Arrow(Num, Num));\n  let a: Hazelnut.Action.t = Construct(Hazelnut.Shape.Plus);\n  let ht: Hazelnut.Htyp.t = Arrow(Num, Num);\n  let given: option(Hazelnut.Zexp.t) = Hazelnut.ana_action(ctx, ze, a, ht);\n  let expected: option(Hazelnut.Zexp.t) =\n    Some(\n      LAsc(Lam(\"x\", RPlus(Var(\"x\"), Cursor(EHole))), Arrow(Num, Num)),\n    );\n  check(zexp_typ, \"same Hazelnut.Zexp.t\", given, expected);\n};\n\nlet test_st12 = () => {\n  let ctx: typctx = TypCtx.singleton(\"x\", Hazelnut.Htyp.Num);\n  let ze: Hazelnut.Zexp.t =\n    LAsc(Lam(\"x\", RPlus(Var(\"x\"), Cursor(EHole))), Arrow(Num, Num));\n  let t: Hazelnut.Htyp.t = Arrow(Num, Num);\n  let a: Hazelnut.Action.t = Construct(Hazelnut.Shape.Lit(1));\n  let given: option((Hazelnut.Zexp.t, Hazelnut.Htyp.t)) =\n    Hazelnut.syn_action(ctx, (ze, t), a);\n  let expected: option((Hazelnut.Zexp.t, Hazelnut.Htyp.t)) =\n    Some((\n      LAsc(Lam(\"x\", RPlus(Var(\"x\"), Cursor(Lit(1)))), Arrow(Num, Num)),\n      Arrow(Num, Num),\n    ));\n  check(zexp_htyp, \"same option(Hazelnut.Zexp.t)\", given, expected);\n};\n\nlet test_ast12 = () => {\n  let ctx: typctx = TypCtx.singleton(\"x\", Hazelnut.Htyp.Num);\n  let ze: Hazelnut.Zexp.t =\n    LAsc(Lam(\"x\", RPlus(Var(\"x\"), Cursor(EHole))), Arrow(Num, Num));\n  let a: Hazelnut.Action.t = Construct(Hazelnut.Shape.Lit(1));\n  let ht: Hazelnut.Htyp.t = Arrow(Num, Num);\n  let given: option(Hazelnut.Zexp.t) = Hazelnut.ana_action(ctx, ze, a, ht);\n  let expected: option(Hazelnut.Zexp.t) =\n    Some(\n      LAsc(Lam(\"x\", RPlus(Var(\"x\"), Cursor(Lit(1)))), Arrow(Num, Num)),\n    );\n  check(zexp_typ, \"same Hazelnut.Zexp.t\", given, expected);\n};\n\nlet sample1_tests = [\n  (\"test_st1\", `Quick, test_st1),\n  (\"test_ast1\", `Quick, test_ast1),\n  (\"test_st2\", `Quick, test_st2),\n  (\"test_ast2\", `Quick, test_ast2),\n  (\"test_st3\", `Quick, test_st3),\n  (\"test_ast3\", `Quick, test_ast3),\n  (\"test_st4\", `Quick, test_st4),\n  (\"test_ast4\", `Quick, test_ast4),\n  (\"test_st5\", `Quick, test_st5),\n  (\"test_ast5\", `Quick, test_ast5),\n  (\"test_st6\", `Quick, test_st6),\n  (\"test_ast6\", `Quick, test_ast6),\n  (\"test_st7\", `Quick, test_st7),\n  (\"test_ast7\", `Quick, test_ast7),\n  (\"test_st8\", `Quick, test_st8),\n  (\"test_ast8\", `Quick, test_ast8),\n  (\"test_st9\", `Quick, test_st9),\n  (\"test_ast9\", `Quick, test_ast9),\n  (\"test_st10\", `Quick, test_st10),\n  (\"test_ast10\", `Quick, test_ast10),\n  (\"test_st11\", `Quick, test_st11),\n  (\"test_ast11\", `Quick, test_ast11),\n  (\"test_st12\", `Quick, test_st12),\n  (\"test_ast12\", `Quick, test_ast12),\n];\n"}}}
Found a `dune` file at /Users/razeenmaroof/research/Finished/test
]] Making a new jbuilder package at /Users/razeenmaroof/research/Finished/test
=== Project root: /Users/razeenmaroof/research/Finished
Detected `opam` dependency manager for local use
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Unable to read /Users/razeenmaroof/research/Finished/test/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":30,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/razeenmaroof/research/Finished/test/Test_sample1.re"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00381469726562ms
Found a `dune` file at /Users/razeenmaroof/research/Finished/test
]] Making a new jbuilder package at /Users/razeenmaroof/research/Finished/test
=== Project root: /Users/razeenmaroof/research/Finished
Detected `opam` dependency manager for local use
Sending response {"id": 30, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/razeenmaroof/research/Finished/test/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":31,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///Users/razeenmaroof/research/Finished/test/Test_sample1.re"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.00405311584473ms
Found a `dune` file at /Users/razeenmaroof/research/Finished/test
]] Making a new jbuilder package at /Users/razeenmaroof/research/Finished/test
=== Project root: /Users/razeenmaroof/research/Finished
Detected `opam` dependency manager for local use
Sending response {"id": 31, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/razeenmaroof/research/Finished/test/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":32,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/razeenmaroof/research/Finished/test/Test_sample1.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00286102294922ms
Found a `dune` file at /Users/razeenmaroof/research/Finished/test
]] Making a new jbuilder package at /Users/razeenmaroof/research/Finished/test
=== Project root: /Users/razeenmaroof/research/Finished
Detected `opam` dependency manager for local use
Sending response {"id": 32, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Unable to read /Users/razeenmaroof/research/Finished/test/.merlin", "command": ""}}]}
Found a `dune` file at /Users/razeenmaroof/research/Finished/test
]] Making a new jbuilder package at /Users/razeenmaroof/research/Finished/test
=== Project root: /Users/razeenmaroof/research/Finished
Detected `opam` dependency manager for local use
Read message 
{"jsonrpc":"2.0","id":33,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///Users/razeenmaroof/research/Finished/test/Test_sample1.re"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.0340938568115ms
Found a `dune` file at /Users/razeenmaroof/research/Finished/test
]] Making a new jbuilder package at /Users/razeenmaroof/research/Finished/test
=== Project root: /Users/razeenmaroof/research/Finished
Detected `opam` dependency manager for local use
Sending response {"id": 33, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/razeenmaroof/research/Finished/test/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":34,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/razeenmaroof/research/Finished/test/Test_sample1.re"},"position":{"line":331,"character":4}}}
[server] Got a method textDocument/hover
[server] processing took 0.00500679016113ms
Found a `dune` file at /Users/razeenmaroof/research/Finished/test
]] Making a new jbuilder package at /Users/razeenmaroof/research/Finished/test
=== Project root: /Users/razeenmaroof/research/Finished
Detected `opam` dependency manager for local use
Sending response {"id": 34, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/razeenmaroof/research/Finished/test/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":34}}
Read message 
{"jsonrpc":"2.0","id":35,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/razeenmaroof/research/Finished/test/Test_sample1.re"},"position":{"line":343,"character":1}}}
[server] Got a method textDocument/hover
[server] processing took 0.00500679016113ms
Found a `dune` file at /Users/razeenmaroof/research/Finished/test
]] Making a new jbuilder package at /Users/razeenmaroof/research/Finished/test
=== Project root: /Users/razeenmaroof/research/Finished
Detected `opam` dependency manager for local use
Sending response {"id": 35, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/razeenmaroof/research/Finished/test/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":36,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/razeenmaroof/research/Finished/test/Test_sample2.re"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0119209289551ms
Found a `dune` file at /Users/razeenmaroof/research/Finished/test
]] Making a new jbuilder package at /Users/razeenmaroof/research/Finished/test
=== Project root: /Users/razeenmaroof/research/Finished
Detected `opam` dependency manager for local use
Sending response {"id": 36, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/razeenmaroof/research/Finished/test/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":37,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///Users/razeenmaroof/research/Finished/test/Test_sample2.re"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.00405311584473ms
Found a `dune` file at /Users/razeenmaroof/research/Finished/test
]] Making a new jbuilder package at /Users/razeenmaroof/research/Finished/test
=== Project root: /Users/razeenmaroof/research/Finished
Detected `opam` dependency manager for local use
Sending response {"id": 37, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/razeenmaroof/research/Finished/test/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":38,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/razeenmaroof/research/Finished/test/Test_sample2.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00405311584473ms
Found a `dune` file at /Users/razeenmaroof/research/Finished/test
]] Making a new jbuilder package at /Users/razeenmaroof/research/Finished/test
=== Project root: /Users/razeenmaroof/research/Finished
Detected `opam` dependency manager for local use
Sending response {"id": 38, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Unable to read /Users/razeenmaroof/research/Finished/test/.merlin", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":39,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///Users/razeenmaroof/research/Finished/test/Test_sample2.re"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.00596046447754ms
Found a `dune` file at /Users/razeenmaroof/research/Finished/test
]] Making a new jbuilder package at /Users/razeenmaroof/research/Finished/test
=== Project root: /Users/razeenmaroof/research/Finished
Detected `opam` dependency manager for local use
Sending response {"id": 39, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/razeenmaroof/research/Finished/test/.merlin"}}
